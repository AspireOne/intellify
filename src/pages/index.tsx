import type {NextPage} from 'next'
import React, {PropsWithChildren, useEffect, useRef} from "react";
import Typed from "typed.js";

import {motion} from 'framer-motion';
import {useSession} from "next-auth/react";
import Title from "../components/Title";
import Subtitle from "../components/Subtitle";
import Button, {Style} from "../components/Button";
import Link from "next/link";
import {paths} from "../lib/constants";
import {twMerge} from "tailwind-merge";

import {FaRegLightbulb, FaRobot} from "react-icons/fa";
import {AiOutlineCode, AiOutlineFileText, AiOutlineThunderbolt} from "react-icons/ai";
// import BiCodeAlt, IoRocketOutline
import {IoMdRocket} from 'react-icons/io';
import {CgPresentation} from 'react-icons/cg';
import {GrDocumentText} from 'react-icons/gr';
import {IoRocketOutline} from "react-icons/io5";
import {BiCodeAlt} from "react-icons/bi";
import Card from "../components/Card";
import CheckmarkSvg from "../components/CheckmarkSvg";


// TODO: ADD _document.tsx or <Head> to every page.
const Home: NextPage = () => {
    const el = useRef(null);
    const session = useSession();

    useEffect(() => {
        // If it slows down the website, stop typing when it is not visible.
        const typed = new Typed(el.current || "", {
            strings: ["√öpravu textu.", "Obsah prezentac√≠.", "Programov√°n√≠."], // Strings to display
            // Speed settings, try diffrent values untill you get good results
            startDelay: 500,
            typeSpeed: 75,
            backSpeed: 50,
            backDelay: 800,
            loop: true,
            cursorChar: ""
        });

        return () => typed.destroy();
    }, []);

    return (
        <div>
            <div className={"w-full h-screen relative"}>
                <motion.div
                    initial={{opacity: 0, y: -10}}
                    transition={{duration: 0.6}}
                    animate={{opacity: 1, y: 0}}
                    className={"text-center mt-44 mx-auto px-2 max-w-[800px] min-h-full"}
                >
                    <div className={"flex flex-col gap-10 text-center justify-center"}>
                        <Title className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl title-font m-0">
                            Nejlep≈°√≠ A.I. N√°stroj na
                            <div className={"sm:my-4"}/>
                            <span className={"title-highlighted"} ref={el}></span>
                            <img
                                className={"transform -translate-y-2 sm:-translate-y-3 inline animate-pulse duration-100 h-[3.5rem] sm:h-[4rem] md:h-[5.4rem]"}
                                src={"https://global-uploads.webflow.com/627a1044a798e6627445c8d1/62b15f383fdee46ecf39db49_line.svg"}></img>
                        </Title>
                        <Subtitle className={"mx-12 text-lg sm:text-xl lg:text-2xl sm:leading-8"}>
                            Vytv√°≈ôejte obsah a dokonƒçujte projekty 10X rychleji,
                            <br className={"hidden sm:block"}/>{" "}
                            nebo si nechte usnadnit svou ka≈ædodenn√≠ pr√°ci.
                        </Subtitle>
                    </div>

                    <Link href={paths.sign}>
                        <Button className={"mt-12 h-12 w-44 text-gray-200 font-bold text-md"}>Zaƒç√≠t pou≈æ√≠vat</Button>
                    </Link>
                </motion.div>
            </div>

            <TextElementPair
                text={"Revolucionalizujte sv≈Øj workflow ‚ö°"}
                element={<AiOutlineThunderbolt/>}
                textSide={"left"}
            >
                Na≈°e n√°stroje zalo≈æen√© na umƒõl√© inteligenci jsou navr≈æeny tak, aby va≈°i pr√°ci usnadnily, zrychlily a zefektivnily.
                S na≈°√≠ sadou n√°stroj≈Ø m≈Ø≈æete automatizovat ƒçasovƒõ n√°roƒçn√© √∫koly, zlep≈°it sv≈Øj pracovn√≠ postup a dos√°hnout v√≠ce v
                krat≈°√≠m ƒçase.
            </TextElementPair>

            {/*TODO: Make parts of text light blue or etc.?*/}
            <TextElementPair
                text={"Rozv√≠jejte svou kreativitu üí°"}
                element={<FaRegLightbulb />}
                textSide={"right"}
            >
                A.I. v√°m d√°v√° jedineƒçnou mo≈ænost nahl√©dnout za horizont p≈ôedstavivosti, kter√Ω byste vy sami neobjevili - p≈ôizp≈Øsobenƒõ
                va≈°emu tempu a stylu. Pou≈æijte jej jako kreativn√≠ho asistenta k brainstormov√°n√≠ n√°pad≈Ø nebo postup≈Ø, psan√≠ z√°pletek
                nebo email≈Ø, roz≈°i≈ôov√°n√≠ textu, a mnoho dal≈°√≠ho. U≈æ se netrapte tv≈Ørƒç√≠m blokem.
            </TextElementPair>

            <TextElementPair text={"Bezpeƒçnost a soukrom√≠ jsou na≈°√≠ prioritou üîí"} element={<div></div>} textSide={"left"}>
                Vƒõ≈ô√≠me, ≈æe soukrom√≠ a bezpeƒçnost va≈°ich dat by mƒõla b√Ωt na prvn√≠m m√≠stƒõ. N√°stroje jsou
                navr≈æeny s ohledem na bezpeƒçnost a v≈°echna data jsou zpracov√°na a uchov√°v√°na v souladu s nejmodernƒõj≈°√≠mi
                standardy ochrany dat a osobn√≠ch √∫daj≈Ø. M≈Ø≈æete si b√Ωt jisti, ≈æe va≈°e data jsou u n√°s v bezpeƒç√≠.
            </TextElementPair>

            <TextElementPair
                text={"P≈ôipojte se k p≈ôevratu A.I. ‚úä"}
                element={<AiOutlineFileText />}
                textSide={"right"}
            >
                <span>
                    P≈ôipojte se k rostouc√≠mu poƒçtu profesion√°l≈Ø, kte≈ô√≠ vyu≈æ√≠vaj√≠ s√≠lu umƒõl√© inteligence k tomu, aby v√Ωsledky sv√© pr√°ce
                dostali na dal≈°√≠ √∫rove≈à. Na≈°e n√°stroje jsou snadno pou≈æiteln√©, cenovƒõ dostupn√© a navr≈æeny tak, aby v√°m pomohly dos√°hnout
                v√≠ce v krat≈°√≠m ƒçase.
                </span>
                <Button style={Style.OUTLINE} className={"mt-4 float-right"}>P≈ôipojit se</Button>
            </TextElementPair>

            {/*Cards with the specific tools*/}


            <div className="bg-gray-900 min-h-screen text-white py-20">
                <div className="container mx-auto px-4 sm:px-6 lg:px-8">
                    <Title>Vytv√°≈ôejte prezentace, editujte texty, programujte...</Title>
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mt-12 mb-8">
                        <FeatureCard
                            icon={<IoRocketOutline className="h-10 w-10 text-white" />}
                            title={"Vytv√°≈ôen√≠ prezentac√≠"}
                            items={[
                                "Vytvo≈ôte prezentaci bƒõhem vte≈ôin",
                                "P≈ôizp≈Øsobte si parametry dle pot≈ôeby",
                                "Vytv√°≈ôejte profesion√°ln√≠ a vizu√°lnƒõ p≈ô√≠jemn√© prezentace",
                            ]}>
                            Tento n√°stroj v√°m umo≈æn√≠ vytv√°≈ôet rozs√°hl√© prezentace bƒõhem
                            vte≈ôin. Je navr≈æen tak, aby proces vytv√°≈ôen√≠ profesion√°ln√≠ch,
                            vizu√°lnƒõ p≈ô√≠jemn√Ωch prezentac√≠ byl rychl√Ω a snadn√Ω.
                        </FeatureCard>

                        <FeatureCard
                            icon={<AiOutlineFileText className="h-10 w-10 text-white" />}
                            title={"Editov√°n√≠ text≈Ø"}
                            items={[
                                "Upravujte texty rychle a snadno",
                                "Vylep≈°ujte sv√© texty pomoc√≠ doporuƒçen√≠ od na≈°eho A.I.",
                                "Upravujte gramatiku a pravopis d√≠ky na≈°√≠ A.I. technologii",
                            ]}
                        >
                            Tento n√°stroj v√°m umo≈æn√≠ editovat texty rychleji a snadnƒõji d√≠ky na≈°√≠ A.I. technologii.
                        </FeatureCard>
                        <FeatureCard
                            icon={<BiCodeAlt className="h-10 w-10 text-white" />}
                            title={"Programov√°n√≠"}
                            items={[
                                "Zvy≈°te rychlost k√≥dov√°n√≠ s na≈°√≠ A.I. technologi√≠",
                                "Vyu≈æijte doporuƒçen√≠ od na≈°eho A.I. p≈ôi psan√≠ k√≥du",
                                "Programujte efektivnƒõji a s men≈°√≠m mno≈æstv√≠m chyb",
                            ]}
                        >
                            Tento n√°stroj v√°m umo≈æn√≠ programovat rychleji a efektivnƒõji d√≠ky na≈°√≠ A.I. technologii,
                            kter√° v√°m pom≈Ø≈æe s k√≥dov√°n√≠m.
                        </FeatureCard>
                    </div>

                    <div className={"flex flex-row items-center gap-5"}>
                        <Title size={3} className={"text-gray-300"}>... A mnohem v√≠ce</Title>
                        <span>‚Ä¢</span>
                        <Button>P≈ôihl√°sit se</Button>
                    </div>
                </div>
            </div>
        </div>
    );
}

function FeatureCard(props: PropsWithChildren<{ icon: JSX.Element, title: string, items: string[] }>) {
    return (
        <div className="p-6 bg-gray-800 rounded-lg">
            <div className="flex items-center justify-center h-20 w-20 bg-gray-900 rounded-md mb-4">
                {props.icon}
            </div>
            <h2 className="text-xl font-bold mb-2">{props.title}</h2>
            <p className="text-gray-400 mb-4">{props.children}</p>
            <ul className="text-gray-400">
                {props.items.map((item) => <li key={item}>‚Ä¢ {item}</li>)}
            </ul>
        </div>
    );
}

/**
 * Creates a pair of text and element for the landing page. Text next to the element.
 * @param props.text Text to display
 * @param props.element Element to display
* */
function TextElementPair(props: PropsWithChildren<{ text: string, element: JSX.Element, className?: string, textSide: "left" | "right" }>) {
    const flexDirection = props.textSide === "right" ? "flex-row-reverse" : "flex-row";

    return (
        // TODO: Change it to md.
        <div className={twMerge(`flex flex-col sm:${flexDirection} gap-10 items-center ${props.className}`)}>
            <div className={"w-full"}>
                <Title className={"mb-3"}>{props.text}</Title>
                <Subtitle className={""}>{props.children}</Subtitle>
            </div>
            <div className={"w-full"}>
                <div className={"mx-auto w-min"}>
                    {props.element}
                </div>
            </div>
        </div>
    );
}

export default Home